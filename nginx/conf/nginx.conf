load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    resolver 127.0.0.11;
    client_body_buffer_size 128k;
    client_max_body_size 10m;

    lua_shared_dict upstream_servers 1m;

    init_by_lua_block {
        -- Set up a shared dictionary for upstream servers
        local cjson = require "cjson"
        local upstream_servers = { "http://backend_one:5000", "http://backend_two:5000" }
        
        -- Serialize and store the list in the shared dictionary
        local upstream_servers_json = cjson.encode(upstream_servers)
        ngx.shared.upstream_servers:set("list", upstream_servers_json)
    }

    upstream backend_one {
        server backend_one:5000;
    }

    upstream backend_two {
        server backend_two:5000;
    }

    server {
        listen       8080;
        server_name  localhost;

        location / {
            content_by_lua_block {
                local broadcast = require "/etc/nginx/broadcast"
                broadcast.broadcast_request()
            }
        }
    }
}
